cc <- transitivity(get(paste("g", j, i, sep = "_")), type = "local",
vids = V(get(paste("g", j, i, sep = "_"))) )
organism <- j
category <- i
return(data.frame(protein, cc, organism, category, stringsAsFactors = F))
})
})
cc <- do.call(rbind, do.call(rbind, cc))
cc <- cc %>%
group_by(organism, category) %>%
mutate(cc = ifelse(is.nan(cc), 0, cc))
density_plot_cc_local <- ggplot(cc, aes(x = cc,  y = organism, fill = category)) +
geom_density_ridges(alpha = 0.5, scale = 0.9) +
#scale_x_sqrt() +
theme_ridges()
scatter_cc_local <- ggplot(cc, aes(x = organism, y = cc, col = category, group = category)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5),
alpha = 0.5) +
# stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "errorbar",
#              color = "black", width = 0.1, position = position_dodge(width = 0.5)) +
# stat_summary(fun.y = mean, geom = "point", color = "black",
#              position = position_dodge(width = 0.5)) +
guides(col = guide_legend(title = "Category", override.aes = aes(label = ""))) +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5 )
boxplot_cc_local <- ggplot(cc, aes(x = organism, y = cc, fill = category)) +
geom_boxplot() +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5 )
scatter_cc_local
# Dynamites ---------------------------------------------------------------
pos.d <- position_dodge(width = 0.9)
dg$organism <- factor(dg$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(dg, aes(x = organism, y = degree, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean degree") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5, label.y = 50)
pos.d <- position_dodge(width = 0.9)
btw$organism <- factor(btw$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(btw, aes(x = organism, y = btw, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean beetweeness") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5, label.y = 0.011)
pos.d <- position_dodge(width = 0.9)
cc$organism <- factor(cc$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(cc, aes(x = organism, y = cc, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean local clustering coefficient") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5)
source('~/part_1/analysis/np/int_400/all_common_cogs/all_common_cogs.R', echo=TRUE)
# Set WD
setwd("~/part_1/analysis/np/int_400/")
# Species comprised in our study
let <- c("lethal", "nonlethal")
species <- c("celegans", "drosophila", "mouse", "yeast")
# Load interaction tables
invisible(lapply(species, function(i) {
tryCatch(
assign(i, read.csv(paste0(i, "_int400.csv"), stringsAsFactors = F, header = T),
envir = .GlobalEnv),
error = function(e) NULL
)
}))
# Load table with all inferred roots
load("../../table_all_org.RData")
# Select only the lethal genes
all_common_cogs <- purrr::reduce(split(table$cog_id[table$lethal_nonlethal == "lethal"],
table$organism[table$lethal_nonlethal == "lethal"]), dplyr::intersect)
table <- table[table$cog_id %in% all_common_cogs,]
# Get all lethal and non-letal genes
lethal_genes <- lapply(species, function(x) {
table$ensembl_peptide_id[table$organism == x &
table$lethal_nonlethal == "lethal"]
})
names(lethal_genes) <- species
nonlethal_genes <- lapply(species, function(x) {
table$ensembl_peptide_id[table$organism == x &
table$lethal_nonlethal == "nonlethal"]
})
names(nonlethal_genes) <- species
# Filter interaction tables by lethality
invisible(lapply(species, function (x) {
assign(paste0(x, "_lethal_int"), get(x)[  get(x)$protein1 %in% lethal_genes[[x]] &
get(x)$protein2 %in% lethal_genes[[x]]
,], envir = .GlobalEnv)
}))
invisible(lapply(species, function (x) {
assign(paste0(x, "_nonlethal_int"), get(x)[  get(x)$protein1 %in% nonlethal_genes[[x]] &
get(x)$protein2 %in% nonlethal_genes[[x]]
,], envir = .GlobalEnv)
}))
# Remove duplicates function
remove_duplicates <- function(df) {
idx <- duplicated(t(apply(df, 1, sort)))
df <- df[ idx ,]
return(df)
}
invisible(lapply(species, function (x) {
assign(paste0(x, "_lethal_int"), remove_duplicates(get(paste0(x, "_lethal_int"))),
envir = .GlobalEnv)
}))
invisible(lapply(species, function (x) {
assign(paste0(x, "_nonlethal_int"), remove_duplicates(get(paste0(x, "_nonlethal_int"))),
envir = .GlobalEnv)
}))
# Make igraph objects
invisible(lapply(c("lethal", "nonlethal"), function(y) {
lapply(species, function (x) {
assign(paste("g", x, y, sep = "_"), graph_from_edgelist( as.matrix(
get(paste(x, y, "int", sep = "_"))[, 1:2] ), directed = F)
,  envir = .GlobalEnv)
})
}))
# Node degree -------------------------------------------------------------
dg <- lapply(let, function (i) {
lapply(species, function(j) {
protein <- names(degree(get(paste("g", j, i, sep = "_"))))
degree <- degree(get(paste("g", j, i, sep = "_")))
organism <- j
category <- i
return(data.frame(protein, degree, organism, category, stringsAsFactors = F))
})
})
dg <- do.call(rbind, do.call(rbind, dg))
dg <- dg %>%
group_by(organism, category) %>%
filter(degree < mean(degree) * 5)
density_plot_degree <- ggplot(dg, aes(x = degree,  y = organism, fill = category)) +
geom_density_ridges(alpha = 0.5, scale = 0.95) +
scale_x_log10() +
theme_ridges()
scatter_degree <- ggplot(dg, aes(x = organism, y = degree, col = category, group = category)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5),
alpha = 0.5) +
# stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "errorbar",
#              color = "black", width = 0.1, position = position_dodge(width = 0.5)) +
# stat_summary(fun.y = mean, geom = "point", color = "black",
#              position = position_dodge(width = 0.5)) +
guides(col = guide_legend(title = "Category", override.aes = aes(label = ""))) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5 )
boxplot_degree <- ggplot(dg, aes(x = organism, y = degree, fill = category)) +
geom_boxplot() +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5 )
walk(c("all_common_cogs/density_plot_degree", "all_common_cogs/scatter_degree", "all_common_cogs/boxplot_degree"), function (x) {
ggsave(paste0(x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("all_common_cogs/density_plot_degree", "all_common_cogs/scatter_degree", "all_common_cogs/boxplot_degree"), function (x) {
ggsave(paste0(x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("all_common_cogs/density_plot_degree", "all_common_cogs/scatter_degree", "all_common_cogs/boxplot_degree"), function (x) {
ggsave(paste0(x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("density_plot_degree", "scatter_degree", "boxplot_degree"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("density_plot_degree", "scatter_degree", "boxplot_degree"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".png"), plot = get(x), width = 10, height = 7)
})
# Betweeness --------------------------------------------------------------
btw <- lapply(let, function (i) {
lapply(species, function (j) {
protein <- names(betweenness(get(paste("g", j, i, sep = "_")), directed = F, normalized = T))
btw <- betweenness(get(paste("g", j, i, sep = "_")), directed = F, normalized = T)
organism <- j
category <- i
return(data.frame(protein, btw, organism, category, stringsAsFactors = F))
})
})
btw <- do.call(rbind, do.call(rbind, btw))
btw <- btw %>%
group_by(organism, category) %>%
filter(btw < mean(btw) * 5)
density_plot_btw <- ggplot(btw, aes(x = btw,  y = organism, fill = category)) +
geom_density_ridges(alpha = 0.5, scale = 0.9) +
scale_x_sqrt() +
theme_ridges()
scatter_btw <- ggplot(btw, aes(x = organism, y = btw, col = category, group = category)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5),
alpha = 0.5) +
# stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "errorbar",
#              color = "black", width = 0.1, position = position_dodge(width = 0.5)) +
# stat_summary(fun.y = mean, geom = "point", color = "black",
#              position = position_dodge(width = 0.5)) +
guides(col = guide_legend(title = "Category", override.aes = aes(label = ""))) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5 )
boxplot_btw <- ggplot(btw, aes(x = organism, y = btw, fill = category)) +
geom_boxplot() +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5 )
walk(c("density_plot_btw", "scatter_btw", "boxplot_btw"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("density_plot_btw", "scatter_btw", "boxplot_btw"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".png"), plot = get(x), width = 10, height = 7)
})
cc <- lapply(let, function (i) {
lapply(species, function (j) {
protein <- V(get(paste("g", j, i, sep = "_")))$name
cc <- transitivity(get(paste("g", j, i, sep = "_")), type = "local",
vids = V(get(paste("g", j, i, sep = "_"))) )
organism <- j
category <- i
return(data.frame(protein, cc, organism, category, stringsAsFactors = F))
})
})
cc <- do.call(rbind, do.call(rbind, cc))
cc <- cc %>%
group_by(organism, category) %>%
mutate(cc = ifelse(is.nan(cc), 0, cc))
density_plot_cc_local <- ggplot(cc, aes(x = cc,  y = organism, fill = category)) +
geom_density_ridges(alpha = 0.5, scale = 0.9) +
#scale_x_sqrt() +
theme_ridges()
scatter_cc_local <- ggplot(cc, aes(x = organism, y = cc, col = category, group = category)) +
geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.5),
alpha = 0.5) +
# stat_summary(fun.data = mean_sdl, fun.args = list(mult = 1), geom = "errorbar",
#              color = "black", width = 0.1, position = position_dodge(width = 0.5)) +
# stat_summary(fun.y = mean, geom = "point", color = "black",
#              position = position_dodge(width = 0.5)) +
guides(col = guide_legend(title = "Category", override.aes = aes(label = ""))) +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5 )
boxplot_cc_local <- ggplot(cc, aes(x = organism, y = cc, fill = category)) +
geom_boxplot() +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5 )
walk(c("density_plot_cc_local", "scatter_cc_local", "boxplot_cc_local"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".pdf"), plot = get(x), width = 10, height = 7)
})
walk(c("density_plot_cc_local", "scatter_cc_local", "boxplot_cc_local"), function (x) {
ggsave(paste0("all_common_cogs/", x, ".png"), plot = get(x), width = 10, height = 7)
})
cc_global <- lapply(let, function (i) {
lapply(species, function (j) {
cc <- transitivity(get(paste("g", j, i, sep = "_")), type = "global" )
organism <- j
category <- i
return(data.frame(cc, organism, category, stringsAsFactors = F))
})
})
cc_global <- unique(do.call(rbind, do.call(rbind, cc_global)))
barplot_cc <- ggplot(cc_global, aes(x = organism, y = cc, fill = category)) +
geom_bar(position = position_dodge(width = 0.9), stat = "identity")
ggsave("all_common_cogs/cc_global.pdf", barplot_cc, width = 10, height = 7)
ggsave("all_common_cogs/cc_global.png", barplot_cc, width = 10, height = 7)
pos.d <- position_dodge(width = 0.9)
dg$organism <- factor(dg$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(dg, aes(x = organism, y = degree, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean degree") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5, label.y = 50)
ggsave("all_common_cogs/dyn_degree.pdf", width = 10, height = 7)
ggsave("all_common_cogs/dyn_degree.png", width = 10, height = 7)
pos.d <- position_dodge(width = 0.9)
btw$organism <- factor(btw$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(btw, aes(x = organism, y = btw, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean beetweeness") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "t.test", label = "p.signif", label.x = 1.5, label.y = 0.011)
ggsave("all_common_cogs/dyn_btw.pdf", width = 10, height = 7)
ggsave("all_common_cogs/dyn_btw.png", width = 10, height = 7)
pos.d <- position_dodge(width = 0.9)
cc$organism <- factor(cc$organism, levels = c("celegans", "drosophila", "mouse", "yeast"),
labels = c("Caenorhabditis \nelegans", "Drosophila \nmelanogaster",
"Mus \nmusculus", "Saccharomyces \ncerevisiae"))
ggplot(cc, aes(x = organism, y = cc, fill = factor(category)) ) +
geom_bar(stat = "summary", fun.y = "mean", position = pos.d) +
stat_summary(fun.data = mean_se, fun.args = list(mult = 1), geom = "errorbar",
lwd = 0.6, position = pos.d, width = 0.2) +
scale_fill_manual(values = c(lethal = "#ff4a4aff", nonlethal = "#3939c0ff"),
labels = c("Essential", "Others"), guide = guide_legend("Essentiality")) +
labs(x = "Organism", y = "Mean local clustering coefficient") +
theme_classic() +
theme(axis.text.x = element_text(face = "italic", size = 11),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 13),
axis.line.x = element_blank(),
axis.ticks.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
stat_compare_means(method = "kruskal.test", label = "p.signif", label.x = 1.5)
ggsave("all_common_cogs/dyn_lcc.pdf", width = 10, height = 7)
ggsave("all_common_cogs/dyn_lcc.png", width = 10, height = 7)
# plot grid ----
ggarrange(density_plot_degree,
ggarrange(boxplot_degree, scatter_degree, ncol = 2, labels = c("B", "C")),
nrow = 2, labels = "A")
ggsave(filename = "all_common_cogs/comb_degree.pdf", width = 10, height = 7)
ggsave(filename = "all_common_cogs/comb_degree.png", width = 10, height = 7)
ggarrange(density_plot_btw,
ggarrange(boxplot_btw, scatter_btw, ncol = 2, labels = c("B", "C")),
nrow = 2, labels = "A")
ggsave(filename = "all_common_cogs/comb_btw.pdf", width = 10, height = 7)
ggsave(filename = "all_common_cogs/comb_btw.png", width = 10, height = 7)
ggarrange(density_plot_cc_local,
ggarrange(boxplot_cc_local, scatter_cc_local, ncol = 2, labels = c("B", "C")),
nrow = 2, labels = "A")
ggsave(filename = "all_common_cogs/comb_cc_local.pdf", width = 10, height = 7)
ggsave(filename = "all_common_cogs/comb_cc_local.png", width = 10, height = 7)
install.packages("fishualize")
library(fishualize)
fishualize()
fish_palettes()
fishualize(option = "Acanthurus_leucosternon", n = 10)
fishualize(option = "Acanthurus_leucosternon", n = 10, end = 0.6)
fishualize(option = "Acanthurus_leucosternon", n = 10, end = 0.9)
fishualize(option = "Acanthurus_leucosternon", n = 10, end = 1.5)
fishualize(option = "Acanthurus_leucosternon", n = 10, end = 1)
fishualize(option = "Melichthys_vidua", n = 10, end = 1)
load("/home/iaradsouza/part_1/analysis/enrichment/enrich_tables.RData")
View(terms_all)
setwd("~/part_1/analysis/mouse/")
library(dplyr)
library(tidyr)
# Load mouse data
load("geneplast_results.RData")
load("table_plot_mouse.RData")
# Get roots for each category
root <- unique(table_plot_mouse[, c(2,3)])
# Get 90th root percentile
old_root <- quantile(root$Root, probs = 0.9)
# Select the roots greater or equal than the 90th percentile
res <- root_genes_mouse %>%
group_by(categories) %>%
mutate(prop = ifelse(Root >= old_root, 1, 0))
# Count the number of older COGs and the total number of COGs by category
case <- tapply(res$prop[res$prop == 1], res$categories[res$prop == 1], sum)
total <- tapply(res$prop, res$categories, length)
# Perform proportion test
test <- prop.test(case, total)
prop <- as.vector(test$estimate)
names(prop) <- c("early", "late", "mild")
prop.trend.test(case, total)
dt <- data.frame(categories = c("Early", "Late", "Mild"),
prop = prop, stringsAsFactors = F)
dt$categories <- factor(dt$categories, levels = c("Early", "Mild", "Late"))
# Plot
library(ggplot2)
library(ggpubr)
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "Proportion of lethal COGs on 90th root percentile", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "Proportion of lethal COGs on 90th root percentile", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
panel.grid = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "Proportion of lethal COGs on 90th root percentile", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
# theme_bw() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x.top = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_bw() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
#axis.line.x.top = element_blank(),
panel.grid = element_blank(),
#axis.line.y.right = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
#axis.line.x.top = element_blank(),
panel.grid = element_blank(),
#axis.line.y.right = element_blank(),
axis.line = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5)) +
theme_bw()
plot1
plot1 <- ggplot(dt, aes(x = categories, y = prop)) +
geom_bar(stat = "identity") +
theme_classic() +
labs(title = "", x = "", y = "Proportion") +
theme(axis.text = element_text(face = "plain", size = 12, vjust = 0.5),
axis.ticks.x = element_blank(),
axis.line.x.top = element_blank(),
panel.grid = element_blank(),
axis.line.y.right = element_blank(),
plot.title = element_text(face = "plain", hjust = 0.5))
plot1
ggsave(plot = plot1, filename = "plots/ancestry_oldest.png",
width = 5, height = 3)
ggsave(plot = plot1, filename = "plots/ancestry_oldest.svg",
width = 5, height = 3)
